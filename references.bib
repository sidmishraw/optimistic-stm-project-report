@Article{Shavit1997,
author="Shavit, Nir
and Touitou, Dan",
title="Software transactional memory",
journal="Distributed Computing",
year="1997",
month="Feb",
day="01",
volume="10",
number="2",
pages="99--116",
abstract="{\enspace}As we learn from the literature, flexibility in choosing synchronization operations greatly simplifies the task of designing highly concurrent programs. Unfortunately, existing hardware is inflexible and is at best on the level of a Load--Linked/Store--Conditional operation on a single word. Building on the hardware based transactional synchronization methodology of Herlihy and Moss, we offer software transactional memory (STM), a novel software method for supporting flexible transactional programming of synchronization operations. STM is non-blocking, and can be implemented on existing machines using only a Load--Linked/Store--Conditional operation. We use STM to provide a general highly concurrent method for translating sequential object implementations to non-blocking ones based on implementing a k-word compare{\&}swap STM-transaction. Empirical evidence collected on simulated multiprocessor architectures shows that our method always outperforms the non-blocking translation methods in the style of Barnes, and outperforms Herlihy's translation method for sufficiently large numbers of processors. The key to the efficiency of our software-transactional approach is that unlike Barnes style methods, it is not based on a costly ``recursive helping'' policy.",
issn="1432-0452",
doi="10.1007/s004460050028",
url="https://doi.org/10.1007/s004460050028"
}

@article{weimerskirch2008software,
  title={Software Transactional Memory},
  author={Weimerskirch, Michel},
  year={2008},
  url="https://michel.weimerskirch.net/wp-content/uploads/2008/02/software_transactional_memory.pdf"
}

@article{jones2007beautiful,
  title={Beautiful concurrency},
  author={Jones, Simon Peyton},
  journal={Beautiful Code: Leading Programmers Explain How They Think},
  pages={385--406},
  year={2007},
  publisher={Oâ€™Reilly}
}

@misc{golangGob,
  title={Package gob},
  url="https://golang.org/pkg/encoding/gob/"
}
